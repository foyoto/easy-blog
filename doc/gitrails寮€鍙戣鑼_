GEM/Plugins:

1,分页kaminari
https://github.com/amatsuda/kaminari

2,高级查询meta_search v1.1.1
https://github.com/ernie/meta_search

3.标签acts_as_taggable_on_steroids
https://github.com/mbleigh/acts-as-taggable-on

js 组件：

1,jquery
2,jquery ui
3,xheditor富文本编辑器#http://xheditor.com/
#4,jquery.cycle.all.min.js＃http://jquery.malsup.com/cycle/begin.html

开发规范：
class
1，所有ruby脚本文件第一行加入（ruby1.9的字符集问题）：
# encoding: utf-8

views
1，7个基本action
2，数据表格table
index.html.erb:
    <table width="100%" height="25" cellspacing="0" cellpadding="0" border="0">
      <tbody>
      <tr class="tdbheader">
        <td>标题</td>
        <td>分类</td>
        <td nowrap>来源</td>
        <td nowrap>作者</td>
        <td nowrap>时间</td>
        <td nowrap><input name="chkall" value="on" type="checkbox" onclick="checkall(this.form)"></td>
      </tr>
      <%= render :partial => "meta_search_bar" if controller_name == 'articles' and action_name == 'index' %>
      <% @articles.each do |article| %>
          <tr class="tablecell">
            <td><%= link_to(article.title, a_article_path(article)) %></td>
            <td><%= article.category.name %></td>
            <td><%= article.source %></td>
            <td><%= article.author %></td>
            <td><%= article.dateline %></td>
            <td nowrap><input type="checkbox" name="article[]" value="$article[articleid]"></td>
          </tr>
      <% end %>
      </tbody>
    </table>

3，show页面
_form.html.erb:

    <%= form_for(@article, :url => a_articles_path, :method=>"post", :html => {:multipart=>true}) do |f| %>
        <table width="100%" align="center" border="0" cellspacing="0" cellpadding="0">
          <%= render :partial => "form_body",
                     :locals => {
                             :f => f,
                             :tdtitle => tdtitle
                     } %>
        </table>
    <% end %>

_form_body.html.erb:
    <tr class="tdbheader">
      <td colspan="6"><%= tdtitle %></td>
    </tr>
    <tr class="tablecell">
      <td>标题:</td>
      <td colspan="3">
        <%= f.text_field :title, :size=>60, :class=>"formfield" %>
      </td>
      <td align="right">来源:</td>
      <td>
        <%= f.text_field :source, :size=>30 %>
        <%= select_tag :sltname, options_for_select([['BtChina下载', 'BtChina下载btchina.net'], ['OUR字幕组', 'OUR字幕组bbsour.com'], ['请选择来源', '']], :selected=> ""), :style=>"width:100px;" %>
      </td>
    </tr>
     ......
    <tr class="tablecell">
      <td colspan="7" align="center"><input type="submit" name="submit" id="submit" value="提交" class="formbutton">
        <a class="formbutton" style='padding:5px 7px 1px 7px;' href='/a/articles/new'>重置</a>
    </tr>

4，js脚本原则上都需要放在<head>标签中，如果是ajax加载的除外
通过 content_for 帮助方法在页面引入javascript
<% content_for :head do %>
 //引入扩展的js文件
 <script type="text/javascript">
 // javascript 脚本
 </script>
 <script type="text/javascript" src="/assets/xheditor/xheditor-zh-cn.min.js"></script>
<% end %>
此代码放在 *.html.erb 文件的底部
    ajax提交：
   	post: function( url, data, callback, type ) {
		// shift arguments if data argument was omited
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = {};
		}

		return jQuery.ajax({
			type: "POST",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	}

    get: function( url, data, callback, type ) {
		// shift arguments if data argument was omited
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = null;
		}

		return jQuery.ajax({
			type: "GET",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	}
5.
 <!--左侧的工具条-->
 <%= render_for_sidebar %>

6.消息提示
 #来源redmine开源项目http://www.redmine.org/
 <%= render_flash_messages %>
7.面包屑
 #设计来源于ipvdms
  before_filter :get_page_nav_relations
  <%= page_nav_break_crumbs %>

controller
  TODO:---

model
1，model代码结构：
# encoding: utf-8
class ModelName < ActiveRecord::Base
  #a. model之间的关系声明
  #   如 has_many ...

  # 其他扩展的方法
  # 如 scope ..

  #b. 数据验证声明
  #   如 validates_presence_of :code

  #c. 常量声明
  #   如 定义在config/setting.yml文件(设计参考redmine,目前还将设置写到数据库)
  #d. 实例方法

  #e. 类方法
end

#git
git clone ssh://root@183.90.188.96:10522/~/git/gitrails.git
...项目开发...
git add . #改动文件
git commit
git pull
...解决版本合并问题...
git push

###################
RAILS_EVN=production bundle exec rake assets:precompile